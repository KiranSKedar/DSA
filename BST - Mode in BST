/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    unordered_map<int,int>umap;
    void dfs(TreeNode* root){
        
        if(root==NULL)
            return;
        dfs(root->left);
        umap[root->val]++;
        dfs(root->right);
    }
    vector<int> findMode(TreeNode* root) {
        dfs(root);
        int max=0;
        vector<int>result;
        for(auto it:umap){
            if(it.second>max){
                max=it.second;
                result={};
                result.push_back(it.first);
            }
            else if(it.second==max){
                result.push_back(it.first);
                
            }
        }
        return result;
    }
};
