class Solution{
    public:
    //Complete this function
    //Function to check whether there is a subarray present with 0-sum or not.
    bool subArrayExists(int arr[], int n)
    {
        //Your code here
        
        for(int i=0;i<n;i++)
        {
            int sum=0;
            for(int j=i;j<n;j++)
            {
                sum=sum+arr[j];
                cout<<sum<<" ";
                if(sum==0)
                {
                    return true;
                }
            }
        }
        return false;
    }
};



class Solution{
    public:
    //Complete this function
    //Function to check whether there is a subarray present with 0-sum or not.
    bool subArrayExists(int arr[], int n)
    {
        //Your counorderedde here
        unordered_set<int>s;
        int prefix_sum=0;
        for(int i=0;i<n;i++){
            prefix_sum+=arr[i];
            
            if(prefix_sum==0)
                return true;
            else if(s.find(prefix_sum)!=s.end())
                return true;
                
            s.insert(prefix_sum);
        }
        return false;
    }
};
