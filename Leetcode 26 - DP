
https://leetcode.com/problems/out-of-boundary-paths/submissions/

https://www.youtube.com/watch?v=YH-ZG0q--DQ

class Solution {
public:
    
    int M,N;
    
    int mod=1e9+7;
    
    int t[51][51][51];
    int solve(int maxMove,int startRow,int startColumn){
        
        vector<vector<int>>directions{{0,1},{0,-1},{1,0},{-1,0}};
        
        
        if(startRow<0 || startRow>=M || startColumn<0 || startColumn>=N)
            return 1; //one path
        
        
        if(maxMove<=0)
            return 0;
        
        if(t[maxMove][startRow][startColumn]!=-1)
            return t[maxMove][startRow][startColumn];
        int result=0;
        
        for(auto dir:directions){
            int x=startRow + dir[0];
            int y=startColumn + dir[1];
           result=(result + solve(maxMove-1,x,y))%mod;
        }
        
        return t[maxMove][startRow][startColumn]=result%mod;
    }
    int findPaths(int m, int n, int maxMove, int startRow, int startColumn) {
        M=m;
        N=n;
        memset(t,-1,sizeof(t));
       return solve(maxMove,startRow,startColumn);
    }
};
